apiVersion: v1
kind: Namespace
metadata:
  annotations:
    "helm.sh/hook": pre-install
  labels:
    control-plane: controller-manager
  name: zestfulset-controller-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: zestfulset-controller-controller-manager
  namespace: zestfulset-controller-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: zestfulset-controller-leader-election-role
  namespace: zestfulset-controller-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: zestfulset-controller-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - persistentvolumes
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps.zesty.co
  resources:
  - zestfulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps.zesty.co
  resources:
  - zestfulsets/finalizers
  verbs:
  - update
- apiGroups:
  - apps.zesty.co
  resources:
  - zestfulsets/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: zestfulset-controller-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: zestfulset-controller-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: zestfulset-controller-leader-election-rolebinding
  namespace: zestfulset-controller-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: zestfulset-controller-leader-election-role
subjects:
- kind: ServiceAccount
  name: zestfulset-controller-controller-manager
  namespace: zestfulset-controller-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: zestfulset-controller-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: zestfulset-controller-manager-role
subjects:
- kind: ServiceAccount
  name: zestfulset-controller-controller-manager
  namespace: zestfulset-controller-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: zestfulset-controller-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: zestfulset-controller-proxy-role
subjects:
- kind: ServiceAccount
  name: zestfulset-controller-controller-manager
  namespace: zestfulset-controller-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 0f1b5040.zesty.co
    # leaderElectionReleaseOnCancel defines if the leader should step down volume
    # when the Manager ends. This requires the binary to immediately end when the
    # Manager is stopped, otherwise, this setting is unsafe. Setting this significantly
    # speeds up voluntary leader transitions as the new leader don't have to wait
    # LeaseDuration time first.
    # In the default scaffold provided, the program ends immediately after
    # the manager stops, so would be fine to enable this option. However,
    # if you are doing or is intended to do any operation such as perform cleanups
    # after the manager stops then its usage might be unsafe.
    # leaderElectionReleaseOnCancel: true
kind: ConfigMap
metadata:
  name: zestfulset-controller-manager-config
  namespace: zestfulset-controller-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: zestfulset-controller-controller-manager-metrics-service
  namespace: zestfulset-controller-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: zestfulset-controller-controller-manager
  namespace: zestfulset-controller-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        env:
        - name: CLOUD_PROVIDER
          value: Amazon
        - name: AWS_METADATA_VERSION
          value: "2020-10-27"
        - name: AZURE_METADATA_VERSION
          value: "2020-09-01"
        - name: API_KEY
          value: {{ .Values.apikey }}
        - name: CLOUD_NAME
          value: Amazon
        - name: METADATA_URL
          value: http://169.254.169.254/latest/meta-data
        - name: DYNAMIC_DATA_URL
          value: http://169.254.169.254/latest/dynamic
        - name: TAG_VOLUME_ENDPOINT
          value: https://api.cloudvisor.io/zesty-disk-v5/tag-volume
        - name: DELETE_VOLUMES_ENDPOINT
          value: https://api.cloudvisor.io/zesty-disk-v5/detach-and-delete-volumes
        image: zestyco/zs-controller
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: zestfulset-controller-controller-manager
      terminationGracePeriodSeconds: 10
